// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//make sure to put proto3
syntax = "proto3";
//name the package the same as the name of the proto file
package helloworld;

//all the calls you can make withing this specific controller
service Greeter {
  // unary call
  rpc SayHello(HelloRequest) returns (HelloReply);
  // server streaming call
  rpc SayRepeatHello(RepeatHelloRequest) returns (stream HelloReply);
  
  // unary call - response after a length delay
  rpc SayHelloAfterDelay(HelloRequest) returns (HelloReply);

  //Tests nested messages
  rpc SayHelloNested(TestNested) returns (HelloReply);
}

message FullName{
  string name = 1;
  string lastName = 2;
}

message TestNested{
  FullName myName = 1;
}

message HelloRequest {
  string name = 1;
  string lastName = 2;
}

message RepeatHelloRequest {
  string name = 1;
  int32 count = 2;
}

message HelloReply {
  string message = 1;
}

message HealthCheckRequest{
    string service = 1;
}

message HealthCheckResponse {
    enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

service Health {
  rpc Check(HealthCheckRequest) returns (HealthCheckResponse);
}

